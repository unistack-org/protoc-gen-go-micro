// Code generated by vfsgen; DO NOT EDIT.

// +build !dev

package assets

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"net/http"
	"os"
	pathpkg "path"
	"time"
)

// Assets statically implements the virtual filesystem provided to vfsgen.
var Assets = func() http.FileSystem {
	fs := vfsgen۰FS{
		"/": &vfsgen۰DirInfo{
			name:    "/",
			modTime: time.Date(2021, 1, 12, 10, 40, 27, 967596087, time.UTC),
		},
		"/{{.File.Package}}_micro.pb.go.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "{{.File.Package}}_micro.pb.go.tmpl",
			modTime:          time.Date(2021, 1, 12, 10, 40, 27, 967596087, time.UTC),
			uncompressedSize: 4844,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\xd4\x57\x4b\x6f\xdc\x36\x10\x3e\x47\xbf\x62\x20\x14\x81\x14\xac\xa5\x43\x6f\x5b\xe4\x90\x18\x09\x5a\xa0\x71\x82\xb8\x68\x0f\x41\x60\xd0\xd2\xac\x96\xb5\x96\x54\x49\x6a\x1d\x43\xd6\x7f\x2f\xf8\xd0\x8b\xab\xd5\x7a\x0d\xa3\x40\x7d\xb1\x48\xce\x37\x9c\xc7\x37\xb3\xc3\x34\x85\x4b\x9e\x23\x14\xc8\x50\x10\x85\x39\xdc\x3e\x40\x25\xb8\xe2\xd9\x45\x81\xec\x62\x47\x33\xc1\x83\x34\x05\xc9\x6b\x91\xe1\x1a\x9a\x26\xf9\x48\x4b\x4c\xae\xc8\x0e\xdb\x36\xa8\x48\x76\x47\x0a\x84\xa6\x29\xf8\x97\xbb\xe2\x77\x22\xd5\x87\x12\x77\xc8\x14\x18\x39\x78\x04\x59\x95\x54\xbd\x13\x82\x3c\x40\xf8\x4b\x08\x8f\x50\x12\xa9\xda\x36\x08\xe8\xae\xe2\x42\x41\x14\xbc\x0a\x33\xce\x14\xfe\x50\x61\x10\xbc\x32\x37\xde\x90\x8a\x42\x58\x50\xb5\xad\x6f\x93\x8c\xef\xd2\x9a\x51\xa9\x48\x76\x77\xc1\x45\x91\x1a\x91\x74\xff\x73\x4a\x2a\x1a\x02\x00\x74\xa8\xac\xa4\xfa\xe6\xd3\x40\x2b\x18\xf6\x40\x89\x62\x8f\xe2\x09\x40\x2b\x18\x06\x71\x10\x34\xcd\x05\xfc\x74\x8d\x62\x4f\x33\xd4\xd1\x80\xf5\x5b\x48\xdc\xda\x84\x07\x1e\x41\x09\xba\xbb\xae\x37\x1b\xfa\x03\x42\x77\x14\x82\xf6\x3d\x4d\xe1\x0a\xef\x9b\x66\xac\xa0\x6d\x3f\xb0\xbc\xe2\x94\x29\xa9\x53\xb0\xa7\x39\x4a\xd0\x81\xc0\x7e\x7b\x87\x2a\x27\x8a\xc0\x86\x0b\xf0\xc1\x20\xed\x2a\xd8\xd4\x2c\x5b\xd4\x1e\xc5\xf0\xed\xfb\x9b\x3e\xd0\x49\x77\x00\x4d\xa0\xa3\xb9\x27\x62\x74\xe5\xac\x64\x60\x04\x75\x04\x04\x61\x05\x0e\x7e\x7f\x42\xb5\xe5\x79\xdb\xf6\xe7\x74\x03\x8c\x2b\x88\x74\x86\x09\x65\x12\xa2\xbf\x25\x67\x10\x6d\x95\xaa\x3e\x57\x8a\x72\x06\x49\x1c\x43\xc8\xea\xb2\x0c\x63\xf0\x90\x68\x05\xff\x44\x71\x0b\x49\x0c\x61\xd8\x09\x74\xf6\xe9\xa0\xbf\x3e\xb4\xcf\x3a\xa2\xff\xb4\xeb\x6b\x08\xfd\x58\x24\x4d\xe3\x28\x1c\xae\x7a\xd9\x2f\x44\x6d\xd7\xf0\xed\xbb\x54\x82\xb2\xa2\x09\x9b\x46\x5f\xae\x77\x21\x69\xdb\xb0\x1d\x24\xad\x9b\x87\xb2\xd6\xd0\xa9\xac\xe7\xcb\x7b\x9e\x3f\x4c\x7d\xd1\x7f\x7a\xd7\x98\x39\x88\x4c\x4c\xd3\x4a\x90\xe5\x23\x84\x53\xcb\x05\x44\xc9\xa5\xa1\xf3\xb5\x12\x48\x76\x94\x15\x31\x44\x26\x21\x28\x86\xad\x11\xd2\x6e\xae\x41\x89\x1a\x97\x6e\xf8\x95\xb0\xbc\x44\xb1\x86\x50\x54\x99\xb3\xa5\xf5\x12\xdf\x05\x48\xbe\xcb\x73\xaa\xb3\x49\xca\xf7\x94\xe5\x94\x15\x12\x12\x3f\x59\x89\x09\xe5\x5b\x20\x55\x85\x2c\x8f\x26\xdb\x2b\xed\xbc\xf6\x39\x0e\x0e\xad\x19\xd8\x78\x00\x96\xab\xfe\x74\x0e\xb9\xb4\x12\xa8\x6a\xc1\x06\xe5\x81\xad\x4b\x9f\x2a\x6e\x01\x94\x29\x14\x1b\x92\x61\xa0\x1e\x2a\x3c\x2d\x66\xaa\x69\xb9\x44\x4c\x0b\x11\xf8\x8f\xdd\x32\x0d\xe4\x37\x56\xd5\xea\x0f\x7d\xc1\xb4\x73\x26\x5d\xe7\x84\x11\x52\x56\x23\xe4\xe7\x5a\x3d\x19\xda\x11\xc7\x67\xc9\x0c\x97\xc6\x18\xc2\xf2\x59\x90\xae\xf0\x79\xa0\x86\xba\x42\x8b\x5c\x93\x4f\x2e\xed\xff\x15\xbc\x69\x9a\xc1\xfb\xb6\x5d\x41\x92\x24\xe3\x46\x9e\x5c\x92\xb2\xb4\x4d\x22\x86\xc8\x0f\xf8\x4d\xaf\xd9\x6d\xaf\x00\x85\xe0\x22\x76\xf6\x62\x29\xf1\xb4\x0d\x2f\x7b\x25\x1b\xf2\xfa\xb4\xeb\xcf\x0b\x81\x91\xee\x92\xae\xa5\x8f\xdf\x6e\xbe\x5b\xfd\x2b\x75\x8c\x7e\xcf\x21\x5f\x0f\x3b\x93\x79\x06\x77\x1e\xe9\x66\x8b\xec\x20\x01\x5e\xb9\x01\xb8\xc8\x46\x31\x78\xb1\x36\xa7\xd7\xc8\xf2\x4f\xb2\x88\x7a\x54\xd3\xc6\x36\x88\xe6\xf8\x2b\x66\xfb\x85\xe3\x49\x15\x1c\xf6\x5c\x53\x05\x47\xfa\xae\xd6\xfc\x8e\xe5\x97\x25\x97\x18\x2d\x66\xd2\xef\x52\x1d\xe4\xc0\x0c\xdf\x02\x27\xaf\x5d\x8c\x3c\x5a\xf9\xe8\x69\x47\xd4\xba\x3c\xb3\x47\x56\x3f\xdd\x5a\xcb\x0d\xfb\x3d\x7c\xa5\x29\x7c\xd2\x84\x06\x37\x63\x49\x55\x6f\x36\xb3\x8d\xd6\xfd\xde\x74\x82\x5b\xbb\x9c\x27\x42\x27\x3b\x4e\xff\xab\xa5\x66\xfb\x9f\xb3\xfd\xfc\x26\x3b\x19\x98\x8e\x64\xf7\x9c\x56\xb2\x50\x3c\x46\xeb\x01\x2b\x9e\xd4\xb1\xce\xd6\x3a\xf0\xe1\x79\x1d\xd1\x23\x5f\xa7\x7f\x8e\x6b\xf6\x07\xfc\x2b\x16\x54\x2a\x14\xc7\x38\x23\xdc\xb9\xf4\x99\x66\x06\xe7\x13\xe8\x48\xc2\xf8\xc9\xe0\x92\xbb\x02\xb9\x3d\xc6\xd1\x15\xf0\x4a\xc9\xa1\xb1\x3b\xa0\x3b\xed\x7a\xbb\x71\xca\xf5\xb0\x19\xc6\x6b\x66\xf1\x7b\x14\x1f\xa9\xd0\xfc\x9a\xf2\xfe\xff\x4f\xfc\x13\x9c\x98\x46\x7c\x42\x33\x8f\x58\x2f\x44\x2e\x1b\x52\x4b\xaa\xf1\xf7\x30\x02\xcf\x76\x25\x90\x4a\xd4\x59\xf7\x8e\xb2\xb6\x2c\x64\x71\xa4\x6e\x6b\x1e\x32\x8b\xd2\x8e\x30\x8d\xdc\x5a\x88\x7e\x03\xde\xac\x26\x2f\x21\xcb\x81\x13\x4f\xbf\xc1\x38\xc3\xcb\x7e\xa2\xd6\xab\x2e\xd4\xfa\x2d\xf5\x17\x55\xdb\x0e\xd7\x8f\xdb\x71\x3c\x32\xda\x0d\xd0\xd2\x71\x39\x92\xc9\x15\xde\x77\x75\xf2\xda\xb7\xa1\xd9\xb6\xb6\x14\x92\x24\x89\x63\x3b\x9b\xbc\x34\x6d\xad\x5f\xcf\x25\x6f\x07\x7e\xd9\x41\xc5\xc8\x7a\x73\xca\xd2\x94\xb2\x38\xa3\x2c\x4e\x28\xcf\x9e\x4f\xf4\x95\xfd\x74\x72\xa4\x24\xa6\x93\x83\x3f\x95\x2c\xcd\x11\xc3\x44\x72\x4a\xeb\xd2\x64\x33\x99\x45\xc6\x25\x3c\x33\x03\xcf\x4f\x22\xff\x06\x00\x00\xff\xff\x2e\x87\x12\xc6\xec\x12\x00\x00"),
		},
		"/{{.File.Package}}_micro_grpc.pb.go.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "{{.File.Package}}_micro_grpc.pb.go.tmpl",
			modTime:          time.Date(2021, 1, 8, 12, 50, 25, 183502330, time.UTC),
			uncompressedSize: 6715,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\xcc\x57\x4d\x6f\xa4\x38\x13\x3e\xe3\x5f\x51\x83\x5e\x8d\xe0\x15\xa1\x0f\x7b\xcb\x28\x87\x51\xb4\xa3\x5d\x69\x93\x59\x4d\xf6\x1e\x31\xb4\x9b\xa0\x80\xe9\x18\xd3\xe9\x88\xf0\xdf\x57\x2e\x1b\x30\x6e\xa0\xbb\x43\xb2\xbb\x39\xa4\x85\xed\x72\x7d\x3e\x55\x8f\x57\x2b\xb8\x2e\xd6\x14\x12\xca\x28\x8f\x04\x5d\xc3\xcf\x17\xd8\xf2\x42\x14\xf1\x45\x42\xd9\x45\x9e\xc6\xbc\x20\xab\x15\x94\x45\xc5\x63\x7a\x09\x75\x1d\x7e\x4b\x33\x1a\xde\x46\x39\x6d\x1a\xb2\x8d\xe2\xc7\x28\xa1\x50\xd7\x49\xf1\xe7\x63\xf2\x47\x54\x8a\x5f\x33\x9a\x53\x26\x00\xcf\xc1\x2b\x94\xdb\x2c\x15\x5f\x39\x8f\x5e\xc0\xfd\xe2\xc2\x2b\x64\x51\x29\x9a\x86\x90\x34\xdf\x16\x5c\x80\x47\x1c\x37\x2e\x98\xa0\x7b\xe1\x12\xe2\xa0\xc6\xfb\x38\x4b\xe5\x1d\x6e\x92\x8a\x87\xea\x67\x18\x17\xf9\xaa\x62\x69\x29\xa2\xf8\xf1\xa2\xe0\xc9\x0a\x4f\xad\x76\xbf\xac\xd4\x41\x17\x5a\xc1\x92\xf2\x1d\xe5\x27\x08\xaa\x83\x2e\xf1\x09\xd9\x45\x1c\x3c\x02\x00\x70\x0f\xe6\x2d\xe1\xf7\xad\x48\x0b\x36\xd8\x51\xfa\xda\x1d\x9f\x90\xba\xbe\x80\xff\xa1\xab\x97\x57\xda\xe7\xa6\x51\xab\x77\x94\xef\xd2\x98\xca\x50\xe1\xa6\xfe\xc6\xd8\xc1\x2b\x08\x9e\xe6\x77\xd5\x66\x93\xee\xc1\xd5\x5b\xae\x94\x25\xe2\x65\x2b\x23\x3a\x90\x7f\x85\xac\x78\xa6\xfc\x5b\xca\x65\xf0\xf4\x0e\x94\x82\x57\xb1\x80\x1a\x4d\x8c\x87\x26\x5e\xe3\x0f\xee\x30\x79\x43\x29\x78\xca\x12\xd2\x10\x99\xce\x1b\x79\x12\x74\x94\x4b\x51\x6d\x36\xb8\x7c\x4b\x9f\x87\x7a\x7b\x55\x31\xa7\x91\xa0\xc0\xe8\x33\x94\xed\x92\xd2\xb0\xa9\x58\x3c\x23\xe9\x19\xda\x83\x71\x23\x7d\x98\xd2\xaa\x3c\xe3\x54\x54\x9c\xc1\xe7\x53\x62\x52\xc7\x97\x10\x07\xe8\xf2\x25\xfe\x6f\xa4\xcb\x75\xcd\x23\x96\xd0\x3e\x07\x37\x54\x3c\x14\xeb\x36\x53\x9c\x3e\xa9\x05\xcc\xd3\xef\x6c\x5b\x89\xbf\x64\x12\x86\xd5\x1b\x1a\xd5\xab\xc4\xca\xad\x21\xf6\xbd\x12\xa7\xc9\xa5\x1b\x88\xd8\x1a\x3c\x56\x08\xd0\x11\xb8\x13\x9c\x46\x79\xca\x12\x1f\x3c\xb4\x91\x72\x63\xe9\xa2\x69\x54\x94\xbd\x18\xfe\x7f\x4a\x10\x64\x40\x35\x44\xbd\x58\xec\x41\xe3\x2b\xbc\x56\xbf\x01\x70\xfa\x84\x37\x75\x8e\x37\x4d\x00\xc5\x56\x94\x10\x86\xe1\x30\x43\x51\x96\xa9\x6a\xf7\xc1\xb3\xd3\x74\xdf\xa9\xd1\xcb\x01\x50\xce\x0b\xee\x63\xe2\xa4\xaf\x34\x2b\xa9\x74\xd8\xf6\xf3\x03\x7c\xfa\x30\xf3\xff\x33\xe1\x47\x91\xb6\xe6\xa4\x88\x6d\x2d\x5b\xa3\xb1\xea\x2b\xdd\x40\xc1\xc7\xca\xc9\x3b\x28\x3a\x94\x01\x09\x52\x1a\xe5\x78\xad\xac\xe8\x38\x8c\x43\x75\x46\x7a\x11\xe0\xf7\x2d\x7d\xfe\x41\x9f\x2a\x5a\x0a\x2f\x0e\x25\xbc\x02\x70\xed\xb0\x86\x9d\xf7\x6e\x80\xa0\x35\xdc\xac\x1b\x5f\x79\x1a\x86\xa1\x8f\x4a\xd3\x0d\xea\xfb\x74\x05\x2c\xcd\x34\xe0\x3b\xc8\xb3\x34\x43\x73\x70\xd5\x70\x6c\x0c\x3a\xd0\x34\xf0\xcf\xfe\x99\xf6\x5f\x5e\xe9\xf0\x85\x77\x94\xad\x3d\x4e\x9f\xfc\x2f\xe7\x3a\x46\xd9\x5a\x67\xe2\xac\x8e\xd7\x46\xbb\x56\x06\x34\x81\xbc\xdd\x28\xe0\xf6\xce\x72\x2b\xad\xfc\x3c\x2c\xa2\x5a\x6d\x1a\x29\x97\x25\xb7\x20\xe1\xd2\xf3\x40\x2a\x3b\x29\xcf\xd3\x01\xe9\x76\xf0\x2a\xc3\x23\x0c\x92\xec\xa4\xe7\x15\xf8\xc8\x54\x1d\xe9\x00\x90\x32\x41\xf9\x26\xea\x66\x8f\xc6\xac\xe7\xdb\x28\xc6\x5d\x99\xeb\x9b\x32\xf1\x3a\xa9\xba\xf1\x15\x2a\x71\xfb\x07\x8d\x77\x33\xdb\xe6\x30\x18\x19\x04\x58\xe4\xb6\x73\x3a\x99\xf2\xe6\xaf\x6c\x7d\x9d\x15\x25\xf5\xa6\x5b\x43\xa7\xa6\x2f\xad\x56\xe4\xc0\x0c\xdb\x02\x7d\x1e\xcb\xd9\x6a\x56\xb6\x74\x7f\x7b\x7b\x97\x65\xb6\x61\xf5\xe9\xd6\x9e\x43\x85\xba\x3c\x0e\x39\x91\x42\xc4\x90\x73\x28\xa3\xda\x0a\x3a\x37\xf8\x6a\x10\xec\x4f\x1b\x04\x9d\x55\xfe\xa9\x09\x83\x9a\x38\xf9\x38\x4c\x1d\x8d\xd1\x7d\xd8\x96\x55\xee\x13\x47\xc3\xea\xaa\x85\x95\x83\xc7\xe4\x29\xad\x8a\x38\x0d\xe9\x8e\x7d\xea\x8f\xd9\xb8\x73\x1a\xe2\x90\x76\x35\x57\x88\x53\x7c\x45\x65\xe3\xcd\x9e\x0f\x0a\x6e\xc8\xe8\xf6\xa1\xee\x99\xad\xad\x4b\xd4\x4c\x01\x75\x4a\x65\x7b\x7e\x89\xd2\x16\xff\x39\x1c\x42\x7c\x42\x2f\xe2\x29\x5f\xa4\xb5\xcb\xff\xe9\x5a\x11\x79\x4a\x6b\x5d\x1f\x21\x64\x6f\x0b\x83\x97\xc3\x78\x97\x38\x1a\x07\xa3\xc6\xb4\x6d\x16\xee\x16\xd9\x76\xa4\xe7\xa0\x75\xf9\xd4\x60\xec\x87\xbb\x1d\xc9\x91\xe1\x7e\x38\xc9\xe4\x15\x13\x88\x02\xe5\x6e\xeb\xb9\x49\xdf\xfa\x07\x9a\x7e\xcd\xea\x07\xda\xf1\x66\xf8\x5b\xc4\xd6\x19\x0a\x74\x3d\xd0\x9e\x78\xfa\x08\x1a\x32\xfa\x26\x82\x7f\xed\x51\x74\xc6\x30\x57\xc5\xf0\x70\xa4\x18\xb4\xaf\x47\xe9\xf8\x60\x4a\xe8\xb7\xbf\x52\xd7\x97\xf0\x0c\xf1\x5c\xc0\x3b\x89\x63\x74\x7b\x93\x25\x2f\xe3\xa5\x8e\x73\xc0\x4a\xc7\xcb\xd6\x71\xba\x41\x80\x33\xc0\x19\x30\xaf\x87\x70\xa2\x7a\xc2\x41\x40\x03\x59\xdc\xf3\x54\xb5\xa7\x59\x68\x4d\xcb\x54\x7d\x62\x73\xd4\x33\x15\x2f\xd1\xda\xf1\xc8\xce\x82\xf7\xad\xaa\xd1\x47\x9e\x24\xe1\x56\x27\x32\xdb\xe4\xb9\xfe\x73\xfa\x84\x77\x0e\xdb\xe8\x7b\x53\x63\x05\x8f\x21\x33\x9e\xe3\xc5\xb3\xac\x78\x96\x13\xbf\x99\x11\x4b\x95\x1d\xbd\x1a\x0f\xb0\xf5\xc8\xb2\x79\xf0\x1c\x73\xed\x39\xf0\xb1\x5b\xe7\xb8\xf4\x60\x12\x99\x45\xd1\xb1\xdf\x33\xb9\xaf\x9d\x21\xa3\xed\x4f\xb7\xb4\x8f\x25\xbe\x96\x49\xfe\x30\x31\xf9\x5c\xed\x77\x83\xb6\x23\x55\x7e\x3f\x81\xaf\xcc\x41\xdb\x32\x5c\x8b\x3c\x0e\xe6\xad\x6c\x67\x6f\xa0\xaf\x07\xf6\x1f\xb2\xd7\xc5\xdc\xf5\x50\xc7\x2c\x75\x7d\x07\xe2\x3a\x9a\x95\x59\x06\xb9\x98\xb5\x1e\xa8\x3c\x4a\x5a\xa7\x29\xeb\x34\x34\x17\xb8\x3f\x5f\x8c\xa7\xb0\x55\x84\xd1\x08\xd2\x17\x04\x68\xa6\x3d\x58\x44\xd5\x24\x0b\x1f\x4a\x54\x47\x79\x6a\xd3\x90\xbf\x03\x00\x00\xff\xff\x0e\x12\x5e\x53\x3b\x1a\x00\x00"),
		},
		"/{{.File.Package}}_micro_http.pb.go.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "{{.File.Package}}_micro_http.pb.go.tmpl",
			modTime:          time.Date(2021, 1, 14, 11, 27, 21, 549953827, time.UTC),
			uncompressedSize: 7378,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\xcc\x58\x5b\x6f\xdb\x36\x14\x7e\x16\x7f\xc5\xa9\x90\x15\xd2\x20\xcb\x0f\x7b\x4b\x91\x87\x22\x68\xb1\x0d\x4b\x5b\x24\xc3\x5e\x8a\x22\x50\xe5\x63\x5b\x8b\x44\x29\x24\xed\x24\x60\xf8\xdf\x07\x5e\x24\x4b\xb2\x7c\x8b\x9a\x6d\x7d\x68\x2c\x92\x87\xe7\xfe\x9d\x4f\x9a\x4e\xe1\xb2\x9c\x21\x2c\x90\x22\x4b\x04\xce\xe0\xfb\x13\x54\xac\x14\x65\x3a\x59\x20\x9d\x14\x59\xca\x4a\x32\x9d\x02\x2f\x57\x2c\xc5\x73\x90\x32\xfe\x98\xe5\x18\x7f\x4a\x0a\x54\x8a\x54\x49\x7a\x97\x2c\x10\xa4\x5c\x94\x5f\xee\x16\x7f\x24\x5c\x7c\xc8\xb1\x40\x2a\xc0\x9c\x83\x67\xe0\x55\x9e\x89\xf7\x8c\x25\x4f\xe0\xbf\xf3\xe1\x19\xf2\x84\x0b\xa5\x08\xc9\x8a\xaa\x64\x02\x02\xe2\xf9\x69\x49\x05\x3e\x0a\x9f\x00\xf8\xf3\x42\xf8\x84\x78\x46\xf3\x6d\x9a\x67\xfa\x2e\x7f\x91\x89\xe5\xea\x7b\x9c\x96\xc5\x74\x45\x33\x2e\x92\xf4\x6e\x52\xb2\xc5\xd4\x9c\x9a\xae\x7f\x99\xda\x83\x3e\xd4\x82\x1c\xd9\x1a\xd9\x11\x82\xf6\xa0\xdf\x55\x78\xbb\x14\xa2\x3a\x20\x3c\xb1\x47\x27\xfa\xa8\x4f\x42\x42\xd6\x09\x83\x80\x00\x00\xdc\x42\xdb\x88\xf8\x73\x25\xb2\x92\x76\x76\xac\x6c\xbd\x13\x12\x22\xe5\x04\xce\x4c\xc4\xce\x2f\x5c\xe8\x94\xb2\xab\x37\xc8\xd6\x59\x8a\x3a\xe2\x66\xd3\x3d\x9b\x14\xc0\x33\x08\x96\x15\x37\xab\xf9\x3c\x7b\x04\xdf\x6d\xf9\x5a\x96\x88\xa7\x4a\x27\xa6\x23\xff\x0c\x79\xf9\x80\xec\x63\xc6\x74\x0e\xdc\x0e\x70\xc1\x56\xa9\x00\x69\x4c\x4c\xbb\x26\x5e\x9a\x3f\x66\x87\xea\x1b\xb8\x60\x19\x5d\x10\x45\x74\x55\x5c\xe9\x93\xe0\x92\xc4\xc5\x6a\x3e\x37\xcb\x9f\xf0\xa1\xab\x77\xa3\x2a\x65\x98\x08\x04\x8a\x0f\xc0\xeb\x25\xab\x61\xbe\xa2\xe9\x1e\xc9\xa0\xa5\x3d\x1a\x36\x32\x84\x5d\x5a\xad\x67\x0c\xc5\x8a\x51\x78\x7b\x4c\x4c\x64\x7a\x0e\x69\x64\x5c\x3e\x37\xff\x2b\xed\xb2\x94\x2c\xa1\x0b\xdc\xe4\xe0\x0a\xc5\xb2\x9c\xd5\x99\x62\x78\x6f\x17\x4c\x9e\x7e\xa3\xd5\x4a\xfc\xa9\x93\xd0\x6d\x82\xb8\xd5\x04\x56\x8c\x57\x2d\xb1\xcf\x2b\x71\x9c\x5c\x36\x87\x84\xce\x20\xa0\xa5\x00\x17\x81\x1b\xc1\x30\x29\x32\xba\x08\x21\x30\x36\x22\x6b\x2d\x4d\x94\xb2\x51\x0e\x52\xf8\xf9\x98\x20\xe8\x80\xba\x4e\x0f\x52\xf1\x08\xae\x4d\xe3\x4b\xfb\x37\x02\x86\xf7\xe6\xa6\xc6\x71\xa5\x22\x28\x2b\xc1\x21\x8e\xe3\x6e\x86\x92\x3c\xb7\xd5\x1e\x42\xd0\x4f\xd3\x6d\xa3\xc6\x2d\x47\x80\x8c\x95\x2c\x34\x89\xd3\xbe\x62\xce\x51\x3b\xdc\xf7\xf3\x15\x7c\x7a\x35\xf3\xff\x37\xe1\x37\x22\x75\xcd\x69\x91\xbe\xb5\x74\xa6\x01\x44\xb7\x8c\xab\x33\x5d\x62\x81\x56\x9f\x64\x94\x43\xf0\x37\x2f\x29\x04\x65\x85\x34\xa9\x32\x7b\x2d\xc4\x61\x08\x3e\x5d\xe5\xb9\x1f\xf6\x84\xb7\x0e\xc6\xd7\xc8\xab\x92\x72\xe4\xf5\x49\x64\xac\x48\x2a\x5d\xfe\x45\x72\x87\x41\x91\x54\x5f\x6d\xa7\x7f\xcb\xa8\x40\x36\x4f\x52\x94\x2a\x02\x29\x21\x47\xba\xef\x42\xa5\xc2\x46\xb5\x6d\xd5\xb3\xbb\x08\xce\xd6\xfa\xea\xa3\xed\xf8\xea\x4b\x79\x76\xa7\x94\xff\x0d\x2e\x34\x5a\x4c\x20\x58\xa0\xb8\x42\xce\x93\x05\x9a\xc6\xb4\x48\x7d\xb6\x8e\x6f\xd2\x25\x16\x49\xfc\x3b\x2f\xa9\xfb\x79\x8d\xf3\xd0\x42\xb3\x52\x72\x13\x87\x5e\x4c\x77\x3f\x52\x93\xbf\xf3\x0b\x48\xaa\x0a\xe9\x2c\xd0\x8f\x91\xd9\x01\xd8\x1a\x51\x0e\x7f\x02\x5f\x4a\xfd\xf8\x17\xb2\xef\x10\x2b\xe5\x87\x11\xec\x14\xf9\x92\x88\x65\x2d\xa0\x7f\x3b\x01\x77\x7e\x54\xc2\x4f\x49\xf9\x90\x69\x1f\x74\x1d\x5e\x25\x55\x60\xf3\xd0\x31\xaa\x15\xa2\xad\x85\x90\x34\x9a\x4b\x36\x84\x7c\xc1\x16\x3e\x3a\x49\x6e\x16\x4c\x07\xe8\x98\xa7\x71\x1a\xdb\x33\xba\xe1\x22\xf3\xfc\x09\x1f\xae\xf1\x7e\x85\x5c\x04\x69\xac\x27\x41\x04\x7e\x1f\x01\xe2\xa6\x51\xfd\xc8\xcc\x97\x56\x47\x4a\x15\x46\x36\xab\x71\x1c\xdb\xea\xcc\xe6\x46\xe1\x9b\x0b\xa0\x59\xee\x86\x53\x33\x9e\x68\x96\x1b\x7b\xcc\xaa\x22\x9d\x94\x6c\xc1\x9f\x52\xf0\xef\xfe\x6b\xdb\x7f\x7e\xe1\xe2\x17\xdf\xe8\x4a\x65\x78\x1f\xbe\x3b\xd5\x31\xa4\x33\x97\x8a\x93\xa6\x73\x1d\x6e\x69\x0d\x50\x91\xbe\xbd\x05\xb6\xf5\x9d\xdc\x80\xca\xdb\x2e\xe0\xc9\xa6\xd9\xeb\x9c\x6b\x78\x1c\x91\x71\xed\x79\xa4\x95\x1d\x97\xe8\xdd\x11\x69\x76\xec\x5d\x1b\x97\x4c\x94\x14\x21\x2f\x6e\xcf\xe3\x1a\x53\xca\x53\x51\x73\x3a\x05\xd3\xb5\x50\x58\x06\x23\x4a\xe0\x89\xc8\xf8\xfc\xc9\x4e\x15\x68\x00\xdc\xcd\x3e\xd4\x13\xeb\xc5\x88\x1a\x5a\x6d\x41\xe8\x98\x60\x97\xd9\xcd\x0b\x11\xdf\x54\x2c\xa3\x62\x1e\xf8\x3f\xad\xfd\x08\x30\x24\xd6\x77\x87\x16\xc3\x3f\x89\x94\xa7\x41\xc7\xd1\xd4\xba\xa9\x92\x2e\xc7\xb6\x55\xdb\xe5\xb0\x56\x81\x31\xb7\x66\x76\x03\xac\xce\xa0\x40\xdf\xc8\x86\x58\x3c\x1e\x47\x2c\x1a\xab\x42\xb8\xc6\x74\xfd\x9e\xce\x2e\xf3\x92\x63\xb0\x97\x1b\x78\xc5\x70\x2b\x79\xae\x8f\x1e\x63\x7d\xd7\x15\x5f\x04\x45\x48\x3c\x57\xf9\x17\x75\xe5\x7b\xe6\x98\x3e\xe5\x54\x11\x4f\x91\xe6\xd8\x9b\xcd\xb1\x7e\x6b\x78\x8a\x78\xa4\x5e\x2d\x6c\x53\x34\xc9\xd3\xb9\x7b\xa9\xe7\xb5\xcb\xb6\x4c\x3b\x75\xf4\x18\x3b\x5c\xab\x6d\x1d\xa3\xc6\x92\xb5\x20\xec\xd3\xb7\x5d\x2a\xeb\xf3\x63\x94\x6a\x3c\x36\x99\x80\x16\x7f\xda\xef\xaa\x81\xf0\x62\x94\xd6\x26\xff\xc7\x6b\xd5\x22\x4e\xab\x94\x07\x08\xfe\xcb\xc2\x10\x14\x7d\x8a\x7c\x6c\x1c\x5a\x35\xe6\x6c\xeb\xf5\xdd\x28\xdb\x8c\xe7\x07\xc8\x78\xb1\x6b\x78\x6d\x06\x70\x3f\x92\x03\x03\x78\x7b\xd8\xe8\x2b\x76\x74\x94\x83\xc3\xda\xf3\x7a\x55\x7b\xba\x79\xe1\x77\x1f\x57\xdc\x0b\xff\x61\x30\xfc\x35\xa1\xb3\xdc\x08\x34\x18\xd8\x9f\xa7\xee\x88\x31\x64\xf0\x1d\x1b\xfe\xb3\x97\xec\x13\xe6\x82\x2d\x86\xe5\x81\x62\x70\xbe\x1e\x7c\xbd\xeb\x4c\x09\xf7\x2d\xc9\xaa\xdb\x94\xf0\x1e\x72\x38\x82\x1b\x12\xaf\x85\xf6\x6d\x2a\x3b\x8e\x3b\x7a\xde\x16\x73\x1c\x2e\x5b\xcf\x6b\x06\x81\x99\x01\x5e\x87\x1c\x2d\xe3\x1d\xd5\x13\x77\x02\x1a\xe9\xe2\xde\x4f\x27\x37\x2f\xee\xc6\x9a\x9a\x4d\x86\xa4\xcf\x23\x4f\x54\x3c\x46\xab\xa3\x7a\x2d\x0b\x7e\x6c\x55\x0d\x7e\x34\xd0\x44\xb9\x87\x44\x6d\x98\x3c\xd5\x7f\x86\xf7\xe6\xce\x2e\x8c\xfe\x00\x96\xd5\xf9\xd8\x62\xdb\xa3\x99\x35\xc6\xd2\x9d\xe3\x96\x40\x33\x15\xb7\xa7\x13\x81\x66\x78\x0d\x6e\xb6\x3f\xb7\x9d\x40\xca\xac\xca\x86\x5e\x0d\x07\xb8\xf7\x22\xd4\xa1\x25\x1b\xd5\xfd\xeb\x9b\xdb\x8f\xbb\xb5\xbe\x65\x0b\x22\x9c\xe7\xcd\x24\x6a\x17\x85\x9d\x44\xfd\x57\x90\xc3\x70\xdf\xcf\x50\x0b\xf6\x77\x43\xda\xeb\x12\xdf\x9e\x49\x61\x37\x31\xc5\xbe\xda\x6f\x06\x6d\x43\xaa\xc2\xcd\x04\xbe\x68\x0f\xda\x9a\xe1\xf6\xc8\x63\x67\xde\x6a\x38\x7b\x01\x7d\xdd\xb2\x7f\x9b\xbd\x8e\xe6\xae\xdb\x3a\xf6\x52\xd7\x1f\x40\x5c\x07\xb3\xb2\x97\x41\x8e\x66\xad\x5b\x2a\x0f\x92\xd6\xdd\x94\x75\x77\x6b\x8e\x70\x7f\x7f\x31\x1e\xc3\x56\x4d\x1b\x0d\x74\xfa\x88\x00\xed\x81\x87\x1e\x51\x6d\x93\x85\x57\x25\xaa\x83\x3c\x55\x29\xf2\x4f\x00\x00\x00\xff\xff\x51\x84\x9a\x15\xd2\x1c\x00\x00"),
		},
	}
	fs["/"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/{{.File.Package}}_micro.pb.go.tmpl"].(os.FileInfo),
		fs["/{{.File.Package}}_micro_grpc.pb.go.tmpl"].(os.FileInfo),
		fs["/{{.File.Package}}_micro_http.pb.go.tmpl"].(os.FileInfo),
	}

	return fs
}()

type vfsgen۰FS map[string]interface{}

func (fs vfsgen۰FS) Open(path string) (http.File, error) {
	path = pathpkg.Clean("/" + path)
	f, ok := fs[path]
	if !ok {
		return nil, &os.PathError{Op: "open", Path: path, Err: os.ErrNotExist}
	}

	switch f := f.(type) {
	case *vfsgen۰CompressedFileInfo:
		gr, err := gzip.NewReader(bytes.NewReader(f.compressedContent))
		if err != nil {
			// This should never happen because we generate the gzip bytes such that they are always valid.
			panic("unexpected error reading own gzip compressed bytes: " + err.Error())
		}
		return &vfsgen۰CompressedFile{
			vfsgen۰CompressedFileInfo: f,
			gr:                        gr,
		}, nil
	case *vfsgen۰DirInfo:
		return &vfsgen۰Dir{
			vfsgen۰DirInfo: f,
		}, nil
	default:
		// This should never happen because we generate only the above types.
		panic(fmt.Sprintf("unexpected type %T", f))
	}
}

// vfsgen۰CompressedFileInfo is a static definition of a gzip compressed file.
type vfsgen۰CompressedFileInfo struct {
	name              string
	modTime           time.Time
	compressedContent []byte
	uncompressedSize  int64
}

func (f *vfsgen۰CompressedFileInfo) Readdir(count int) ([]os.FileInfo, error) {
	return nil, fmt.Errorf("cannot Readdir from file %s", f.name)
}
func (f *vfsgen۰CompressedFileInfo) Stat() (os.FileInfo, error) { return f, nil }

func (f *vfsgen۰CompressedFileInfo) GzipBytes() []byte {
	return f.compressedContent
}

func (f *vfsgen۰CompressedFileInfo) Name() string       { return f.name }
func (f *vfsgen۰CompressedFileInfo) Size() int64        { return f.uncompressedSize }
func (f *vfsgen۰CompressedFileInfo) Mode() os.FileMode  { return 0444 }
func (f *vfsgen۰CompressedFileInfo) ModTime() time.Time { return f.modTime }
func (f *vfsgen۰CompressedFileInfo) IsDir() bool        { return false }
func (f *vfsgen۰CompressedFileInfo) Sys() interface{}   { return nil }

// vfsgen۰CompressedFile is an opened compressedFile instance.
type vfsgen۰CompressedFile struct {
	*vfsgen۰CompressedFileInfo
	gr      *gzip.Reader
	grPos   int64 // Actual gr uncompressed position.
	seekPos int64 // Seek uncompressed position.
}

func (f *vfsgen۰CompressedFile) Read(p []byte) (n int, err error) {
	if f.grPos > f.seekPos {
		// Rewind to beginning.
		err = f.gr.Reset(bytes.NewReader(f.compressedContent))
		if err != nil {
			return 0, err
		}
		f.grPos = 0
	}
	if f.grPos < f.seekPos {
		// Fast-forward.
		_, err = io.CopyN(ioutil.Discard, f.gr, f.seekPos-f.grPos)
		if err != nil {
			return 0, err
		}
		f.grPos = f.seekPos
	}
	n, err = f.gr.Read(p)
	f.grPos += int64(n)
	f.seekPos = f.grPos
	return n, err
}
func (f *vfsgen۰CompressedFile) Seek(offset int64, whence int) (int64, error) {
	switch whence {
	case io.SeekStart:
		f.seekPos = 0 + offset
	case io.SeekCurrent:
		f.seekPos += offset
	case io.SeekEnd:
		f.seekPos = f.uncompressedSize + offset
	default:
		panic(fmt.Errorf("invalid whence value: %v", whence))
	}
	return f.seekPos, nil
}
func (f *vfsgen۰CompressedFile) Close() error {
	return f.gr.Close()
}

// vfsgen۰DirInfo is a static definition of a directory.
type vfsgen۰DirInfo struct {
	name    string
	modTime time.Time
	entries []os.FileInfo
}

func (d *vfsgen۰DirInfo) Read([]byte) (int, error) {
	return 0, fmt.Errorf("cannot Read from directory %s", d.name)
}
func (d *vfsgen۰DirInfo) Close() error               { return nil }
func (d *vfsgen۰DirInfo) Stat() (os.FileInfo, error) { return d, nil }

func (d *vfsgen۰DirInfo) Name() string       { return d.name }
func (d *vfsgen۰DirInfo) Size() int64        { return 0 }
func (d *vfsgen۰DirInfo) Mode() os.FileMode  { return 0755 | os.ModeDir }
func (d *vfsgen۰DirInfo) ModTime() time.Time { return d.modTime }
func (d *vfsgen۰DirInfo) IsDir() bool        { return true }
func (d *vfsgen۰DirInfo) Sys() interface{}   { return nil }

// vfsgen۰Dir is an opened dir instance.
type vfsgen۰Dir struct {
	*vfsgen۰DirInfo
	pos int // Position within entries for Seek and Readdir.
}

func (d *vfsgen۰Dir) Seek(offset int64, whence int) (int64, error) {
	if offset == 0 && whence == io.SeekStart {
		d.pos = 0
		return 0, nil
	}
	return 0, fmt.Errorf("unsupported Seek in directory %s", d.name)
}

func (d *vfsgen۰Dir) Readdir(count int) ([]os.FileInfo, error) {
	if d.pos >= len(d.entries) && count > 0 {
		return nil, io.EOF
	}
	if count <= 0 || count > len(d.entries)-d.pos {
		count = len(d.entries) - d.pos
	}
	e := d.entries[d.pos : d.pos+count]
	d.pos += count
	return e, nil
}
